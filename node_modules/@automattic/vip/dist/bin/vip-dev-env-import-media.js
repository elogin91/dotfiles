#!/usr/bin/env node
"use strict";

var _command = _interopRequireDefault(require("../lib/cli/command"));
var _devEnvironmentCli = require("../lib/dev-environment/dev-environment-cli");
var _devEnvironmentCore = require("../lib/dev-environment/dev-environment-core");
var _tracker = require("../lib/tracker");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const exampleUsage = 'vip dev-env import media';
const usage = 'vip dev-env import media';
const examples = [{
  usage: `${exampleUsage} /Users/example/Desktop/uploads --slug="example-site"`,
  description: 'Import the contents of the "uploads" directory from a path on the user\'s local machine to the "/wp-content/uploads" directory of the local environment named "example-site".'
}];
(0, _command.default)({
  requiredArgs: 1,
  usage
}).examples(examples).option('slug', 'A unique name for a local environment. Default is "vip-local".', undefined, _devEnvironmentCli.processSlug).argv(process.argv, async (unmatchedArgs, opt) => {
  const [filePath] = unmatchedArgs;
  const slug = await (0, _devEnvironmentCli.getEnvironmentName)(opt);
  const trackingInfo = (0, _devEnvironmentCli.getEnvTrackingInfo)(slug);
  await (0, _tracker.trackEvent)('dev_env_import_media_command_execute', trackingInfo);
  try {
    await (0, _devEnvironmentCore.importMediaPath)(slug, filePath);
    await (0, _tracker.trackEvent)('dev_env_import_media_command_success', trackingInfo);
  } catch (error) {
    await (0, _devEnvironmentCli.handleCLIException)(error, 'dev_env_import_media_command_error', trackingInfo);
    process.exitCode = 1;
  }
});