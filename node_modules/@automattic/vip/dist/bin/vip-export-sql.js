#!/usr/bin/env node
"use strict";

var _exportSql = require("../commands/export-sql");
var _command = _interopRequireDefault(require("../lib/cli/command"));
var _tracker = require("../lib/tracker");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const examples = [{
  usage: 'vip @example-app.develop export sql',
  description: 'Download an archived copy of the most recent database backup for an environment to the current local directory.'
}, {
  usage: 'vip @example-app.develop export sql --output=~/Desktop/export.sql.gz',
  description: 'Download an archived copy of the most recent database backup for an environment to a specific file path.'
}, {
  usage: 'vip @example-app.develop export sql --generate-backup',
  description: 'Generate a fresh database backup for an environment and download a copy of that backup.'
}];
const appQuery = `
	id,
	name,
	type,
	organization { id, name },
	environments{
		id
		appId
		type
		name
		primaryDomain { name }
		uniqueLabel
	}
`;
(0, _command.default)({
  appContext: true,
  appQuery,
  envContext: true,
  module: 'export-sql',
  requiredArgs: 0,
  usage: 'vip export sql'
}).option('output', 'Download the file to a specific local directory path with a custom file name.').option('generate-backup', 'Generate a fresh database backup and export a copy of that backup.').examples(examples).argv(process.argv, async (arg, {
  app,
  env,
  output,
  generateBackup
}) => {
  const trackerFn = (0, _tracker.makeCommandTracker)('export_sql', {
    app: app.id,
    env: env.uniqueLabel,
    generate_backup: generateBackup
  });
  await trackerFn('execute');
  const exportCommand = new _exportSql.ExportSQLCommand(app, env, {
    outputFile: output,
    generateBackup
  }, trackerFn);
  await exportCommand.run();
  await trackerFn('success');
});