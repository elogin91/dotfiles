#!/usr/bin/env node
"use strict";

var _backupDb = require("../commands/backup-db");
var _command = _interopRequireDefault(require("../lib/cli/command"));
var _tracker = require("../lib/tracker");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const examples = [{
  usage: 'vip @example-app.develop backup db\n' + '      Generating a new database backup...\n' + '      ✓ Preparing for backup generation\n' + '      ✓ Generating backup\n' + '      New database backup created',
  description: 'Generate a new database backup of an environment.'
}];
const appQuery = `
	id,
	name,
	type,
	organization { id, name },
	environments{
		id
		appId
		type
		name
		primaryDomain { name }
		uniqueLabel
	}
`;
void (0, _command.default)({
  appContext: true,
  appQuery,
  envContext: true,
  module: 'backup-db',
  requiredArgs: 0,
  usage: 'vip backup db'
}).examples(examples).argv(process.argv, async (arg, {
  app,
  env
}) => {
  const trackerFn = (0, _tracker.makeCommandTracker)('backup_db', {
    app: app.id,
    env: env.uniqueLabel
  });
  await trackerFn('execute');
  const cmd = new _backupDb.BackupDBCommand(app, env, trackerFn);
  await cmd.run();
  await trackerFn('success');
});