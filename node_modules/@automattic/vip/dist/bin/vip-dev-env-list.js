#!/usr/bin/env node
"use strict";

var _command = _interopRequireDefault(require("../lib/cli/command"));
var _devEnvironmentCli = require("../lib/dev-environment/dev-environment-cli");
var _devEnvironmentCore = require("../lib/dev-environment/dev-environment-core");
var _devEnvironmentLando = require("../lib/dev-environment/dev-environment-lando");
var _tracker = require("../lib/tracker");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const exampleUsage = 'vip dev-env list';
const usage = 'vip dev-env list';
const examples = [{
  usage: `${exampleUsage}`,
  description: 'Retrieve basic information about all local environments.'
}];
(0, _command.default)({
  usage
}).examples(examples).argv(process.argv, async () => {
  const lando = await (0, _devEnvironmentLando.bootstrapLando)();
  lando.events.constructor.prototype.setMaxListeners(1024);
  (0, _devEnvironmentCli.validateDependencies)(lando);
  const trackingInfo = {
    all: true
  };
  await (0, _tracker.trackEvent)('dev_env_list_command_execute', trackingInfo);
  try {
    await (0, _devEnvironmentCore.printAllEnvironmentsInfo)(lando, {});
    await (0, _tracker.trackEvent)('dev_env_list_command_success', trackingInfo);
  } catch (error) {
    await (0, _devEnvironmentCli.handleCLIException)(error, 'dev_env_list_command_error', trackingInfo);
    process.exitCode = 1;
  }
});