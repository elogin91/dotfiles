#!/usr/bin/env node

/**
 * External dependencies
 */
"use strict";

exports.__esModule = true;
exports.appDeployValidateCmd = appDeployValidateCmd;
var _chalk = _interopRequireDefault(require("chalk"));
var _debug = _interopRequireDefault(require("debug"));
var _path = require("path");
var _command = _interopRequireDefault(require("../lib/cli/command"));
var _clientFileUploader = require("../lib/client-file-uploader");
var _customDeploy = require("../lib/custom-deploy/custom-deploy");
var _tracker = require("../lib/tracker");
var _customDeploy2 = require("../lib/validations/custom-deploy");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * Internal dependencies
 */
const debug = (0, _debug.default)('@automattic/vip:bin:vip-app-deploy-validate');
const baseUsage = 'vip app deploy validate';
async function appDeployValidateCmd(arg = [], opts = {}) {
  const app = opts.app;
  const env = opts.env;
  const [fileName] = arg;
  const fileMeta = await (0, _clientFileUploader.getFileMeta)(fileName);
  debug('Options: ', opts);
  debug('Args: ', arg);
  const track = _tracker.trackEventWithEnv.bind(null, app, env);
  debug('Validating file...');
  await (0, _customDeploy.validateFile)(app, env, fileMeta);
  await track('deploy_validate_app_command_execute');
  const ext = (0, _path.extname)(fileName);
  if (ext === '.zip') {
    (0, _customDeploy2.validateZipFile)(fileName);
  } else {
    await (0, _customDeploy2.validateTarFile)(fileName);
  }
  console.log(_chalk.default.green('âœ“ Compressed file has been successfully validated with no errors.'));
}

// Command examples for the `vip app deploy validate` help prompt
const examples = [{
  usage: 'vip app deploy validate file.tar.gz',
  description: 'Validate the directory structure of the local archived file named "file.tar.gz".'
}];
void (0, _command.default)({
  requiredArgs: 1,
  usage: baseUsage
}).examples(examples).argv(process.argv, appDeployValidateCmd);