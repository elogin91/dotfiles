"use strict";

exports.__esModule = true;
exports.default = void 0;
var _configstore = _interopRequireDefault(require("configstore"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
class Insecure {
  file;
  configstore;
  constructor(file) {
    this.file = file;
    this.configstore = new _configstore.default(this.file);
  }
  getPassword(service) {
    try {
      const value = this.configstore.get(service);
      if (null === value || undefined === value) {
        return Promise.resolve(null);
      }

      // eslint-disable-next-line @typescript-eslint/no-base-to-string
      return Promise.resolve(value.toString()); // NOSONAR
    } catch (err) {
      return Promise.reject(err);
    }
  }
  setPassword(service, password) {
    try {
      this.configstore.set(service, password);
      return Promise.resolve(true);
    } catch (err) {
      return Promise.reject(err);
    }
  }
  deletePassword(service) {
    try {
      this.configstore.delete(service);
      return Promise.resolve(true);
    } catch (err) {
      return Promise.reject(err);
    }
  }
}
exports.default = Insecure;