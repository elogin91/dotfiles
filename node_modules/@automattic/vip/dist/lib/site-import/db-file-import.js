"use strict";

exports.__esModule = true;
exports.SYNC_STATUS_NOT_SYNCING = exports.SQL_IMPORT_FILE_SIZE_LIMIT_LAUNCHED = exports.SQL_IMPORT_FILE_SIZE_LIMIT = void 0;
exports.currentUserCanImportForApp = currentUserCanImportForApp;
exports.isSupportedApp = exports.isImportingBlockedBySync = void 0;
var _fileSize = require("../../lib/constants/file-size");
var _vipgo = require("../../lib/constants/vipgo");
const SQL_IMPORT_FILE_SIZE_LIMIT = exports.SQL_IMPORT_FILE_SIZE_LIMIT = 100 * _fileSize.GB_IN_BYTES;
const SQL_IMPORT_FILE_SIZE_LIMIT_LAUNCHED = exports.SQL_IMPORT_FILE_SIZE_LIMIT_LAUNCHED = 5 * _fileSize.GB_IN_BYTES;
function currentUserCanImportForApp(app) {
  // TODO: implement
  return Boolean(app);
}
const isSupportedApp = ({
  typeId
}) => _vipgo.DATABASE_APPLICATION_TYPE_IDS.includes(typeId);
exports.isSupportedApp = isSupportedApp;
const SYNC_STATUS_NOT_SYNCING = exports.SYNC_STATUS_NOT_SYNCING = 'not_syncing';
const isImportingBlockedBySync = env => env.syncProgress?.status !== SYNC_STATUS_NOT_SYNCING;
exports.isImportingBlockedBySync = isImportingBlockedBySync;