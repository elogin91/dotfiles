"use strict";

exports.__esModule = true;
exports.default = void 0;
var _debug = _interopRequireDefault(require("debug"));
var _http = _interopRequireDefault(require("../../../lib/api/http"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const debug = (0, _debug.default)('@automattic/vip:analytics:clients:pendo');
/**
 * Pendo analytics client.
 */
class Pendo {
  eventPrefix;
  userAgent;
  userId;
  context;
  static ENDPOINT = '/pendo';
  constructor(options) {
    this.eventPrefix = options.eventPrefix;
    this.userAgent = options.env.userAgent;
    this.userId = options.userId;
    this.context = {
      ...options.env
    };
  }
  async trackEvent(eventName, eventProps = {}) {
    if (!eventName.startsWith(this.eventPrefix)) {
      eventName = this.eventPrefix + eventName;
    }
    debug('trackEvent()', eventProps);
    this.context = {
      ...this.context,
      org_id: eventProps.org_slug,
      org_slug: eventProps.org_slug,
      userAgent: this.userAgent,
      userId: this.userId
    };
    try {
      return await this.send(eventName, eventProps);
    } catch (error) {
      debug(error);
      return Promise.resolve(false);
    }
  }
  async send(eventName, eventProps) {
    const body = {
      context: this.context,
      event: eventName,
      properties: eventProps,
      timestamp: Date.now(),
      type: 'track',
      visitorId: `${this.context.userId}`
    };
    debug('send()', body);
    const response = await (0, _http.default)(Pendo.ENDPOINT, {
      method: 'POST',
      body: JSON.stringify(body)
    });
    const responseText = await response.text();
    debug('response', responseText);
    return response;
  }
}
exports.default = Pendo;