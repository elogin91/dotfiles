"use strict";

exports.__esModule = true;
exports.appQuery = void 0;
exports.purgeCache = purgeCache;
var _graphqlTag = _interopRequireDefault(require("graphql-tag"));
var _api = _interopRequireDefault(require("../../lib/api"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const mutation = (0, _graphqlTag.default)`
	mutation PurgePageCacheMutation($appId: Int!, $envId: Int!, $urls: [String!]!) {
		purgePageCache(input: { appId: $appId, environmentId: $envId, urls: $urls }) {
			success
			urls
		}
	}
`;

// The subquery for environments lets users choose any environment, including production.
const appQuery = exports.appQuery = `
	id
	name
	environments {
		id
		appId
		name
		primaryDomain {
			name
		}
		type
	}
`;
async function purgeCache(appId, envId, urls) {
  const api = (0, _api.default)();
  const variables = {
    appId,
    envId,
    urls
  };
  const response = await api.mutate({
    mutation,
    variables
  });
  return response.data?.purgePageCache ?? null;
}